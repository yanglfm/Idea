package DemoDay0918;

import DemoDay0914.MyJFrame;

import javax.swing.*;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;

public class Exam2 extends MyJFrame {
    //两个窗口之间的传递，跟传个对象差不多，实例化，然后设置为可视化
    //数据库中的表呈现到
    //把数据塞到JTable，把数据塞到客户端中
    //点击鼠标右键弹出菜单，有的可用，有的不可用，需要绑定另外一些事件
    //内容选中与否，在监听事件一栏中，根据你选择的
    //组件初始化
    private JTable table;
    private JScrollPane panel;
    private DefaultTableModel model;

    public Exam2() {
       /* //方法1
        table=new JTable(4,4);//几行几列
        //根据索引坐标设定值
        table.setValueAt("123456",1,2);
        table.setValueAt(12.63,1,3);//因为是Object类型，所以可以添加任何类型的数据
        //获取第几行第几列的值
        System.out.println(table.getValueAt(1,2));*/
        //方法2
  /*      //设置标题列
       Object[] columnNames=new Object[]{"name","age","sex","isAdmin"};//设置列名
        //设置行的内容
        Object[][]rowDate=new Object[3][4];//二维数组的行数必须要写，列数可以不写
       //给每一行赋值
        rowDate[0]=new Object[]{"张三","20","男",true};//都可以接受
        rowDate[1]=new Object[]{"李四","21","男",false};//都可以接受
        rowDate[2]=new Object[]{"莉莉","23","女",false};//都可以接受
       //表格实例化
        table = new JTable(rowDate, columnNames);//没有标题列
        panel=new JScrollPane(table);//直接实例化就加上table，才会显示（√）
       // panel.add(table);
        //如何显示标题列，并不是加JPanel*/

        //方法4
        //设置标题列
        Object[] columnNames = new Object[]{"name", "age", "sex", "isAdmin"};//设置列名
        //设置行的内容
        Object[][] rowDate = new Object[3][4];//二维数组的行数必须要写，列数可以不写
        //给每一行赋值
        rowDate[0] = new Object[]{"张三", "20", "男", true};//都可以接受
        rowDate[1] = new Object[]{"李四", "21", "男", false};//都可以接受
        rowDate[2] = new Object[]{"莉莉", "23", "女", false};
        //使用模型来添加列和值
        model = new DefaultTableModel(rowDate, columnNames);
        table = new JTable(model) {
            @Override
            public boolean isCellEditable(int row, int column) {
                /*System.out.println(row+"  "+column);

                return super.isCellEditable(row, column);*/
           /*     //设置全部不可编辑
                return false;*/
               /* //设置前3列不能修改
                if (column < 3) {
                    return false;
                }else{
                    return true;
                }*/
                //设置前两行不可以编辑
                if (row < 2) {
                    return false;
                } else {
                    return true;
                }

            }

            @Override
            public Class<?> getColumnClass(int column) {
                return table.getValueAt(0, column).getClass();//改变格式
            }
        };
        //{}//构造代码块

       /* table.addMouseListener(new MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {

                System.out.println( table.getSelectedRow()+"   "+table.getSelectedColumn());
            }

            @Override
            public void mousePressed(MouseEvent e) {

            }

            @Override
            public void mouseReleased(MouseEvent e) {

            }

            @Override
            public void mouseEntered(MouseEvent e) {

            }

            @Override
            public void mouseExited(MouseEvent e) {

            }
        });*/
      /*  //表格设置背景颜色
        table.setBackground(Color.LIGHT_GRAY);*/
        //设置字体样式
        //工具包
        Toolkit toolkit = Toolkit.getDefaultToolkit();
        // String[] font = toolkit.getFontList();
        table.setFont(new Font("楷体", Font.BOLD, 16));//前面是字体，后面啊是
        //指定选中行的颜色
        table.setSelectionBackground(Color.PINK);//选中的时候是pink颜色
        //选中行的前景色
        table.setSelectionForeground(Color.GREEN);//选中行的字体的颜色会有撞色
        //设置行高
        table.setRowHeight(20);
       /* //去除网格
        table.setShowGrid(false);//不显示网格线就没了*/
        //设置网格线颜色
        table.setGridColor(Color.BLACK);
        //文本内容对齐
        DefaultTableCellRenderer renderer =(DefaultTableCellRenderer) table.getDefaultRenderer(Object.class);//代表网格里面什么类型内容都能填进去
        renderer.setHorizontalAlignment(JLabel.CENTER);//文本居中对齐

        //禁止拖拽表头
        table.getTableHeader().setReorderingAllowed(false);
        //禁止拖拽表头的宽度？？
        table.getTableHeader().setResizingAllowed(false);

        //更新表格中的数据内容
        rowDate[0] = new Object[]{"王五", "20", "男", true};
        model.setDataVector(rowDate,columnNames);//通过模型再次塞入

        //后续的内容自己弄

        //面板里面添加了table
        panel = new JScrollPane(table);
        this.add(panel);

        //this.add(table);
    }

    public static void main(String[] args) {
        new Exam2().setVisible(true);//匿名对象
    }

}
